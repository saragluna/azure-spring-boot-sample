spring:
  cloud:
    azure:
      client:
        application-id:
        http:
          read-timeout:
          logging:
            level:
            allowed-header-names:
            allowed-query-param-names:
          write-timeout:
          connect-timeout:
          connection-idle-timeout:
          maximum-connection-pool-size:
        amqp:
          transport-type:
      profile:
        tenant-id:
        environment:
          active-directory-endpoint:
        cloud: Azure
      proxy:
        authentication-type: http
        hostname:
        http:
          non-proxy-hosts:
      retry:
        http:
          retry-after-header:
          retry-after-time-unit: days
        backoff:
          delay:
          max-delay:
        max-attempts:
        timeout:
      credential:
        client-secret:
        client-id: sp1
        password:
        managed-identity-client-id:
      cosmos:
        database: ${COSMOS_DATABASE_NAME}
        endpoint: ${COSMOS_ENDPOINT}
        proxy:
          non-proxy-hosts:
        client:
          application-id:
        profile:
          cloud:
        credential:
          client-id: sp2
          client-secret:
      keyvault:
        secret:
          proxy:
            non-proxy-hosts:
            hostname:
          client:
            application-id:
            write-timeout:
            connection-idle-timeout:
            connect-timeout:
          profile:
            cloud:
          credential:
            client-certificate-password:
          property-source-enabled: true
          endpoint: ${KEY_VAULT_URI}
          retry:
            backoff:
              max-delay:
            retry-after-header:
            retry-after-time-unit: days
          resource:
            region:
          enabled: false
        certificate:
          endpoint: ${KEY_VAULT_URI}
          enabled: false
      eventhubs:
        consumer:
          credential:
            client-id:
            client-secret:
          consumer-group: ${EVENTHUBS_CONSUMER_GROUP_NAME}
          namespace:
          connection-string: ${AZURE_EVENT_HUBS_CONNECTION_STRING}
        producer:
          namespace:
          connection-string:
        event-hub-name: ${EVENTHUBS_EVENTHUB_NAME}
        namespace: ${EVENTHUBS_NAMESPACE_NAME}
        proxy:
          hostname:
        client:
          application-id:
          transport-type:
        profile:
          cloud:
        credential:
          client-certificate-password:
        retry:
          backoff:
            delay:
      servicebus:
        producer:
          queue-name: ${SERVICEBUS_QUEUE_NAME}
          connection-string:
          credential:
            client-id:
            client-certificate-password:
          proxy:
            authentication-type:
          profile:
            cloud:
          retry:
            backoff:
              multiplier:
        consumer:
          queue-name: ${SERVICEBUS_QUEUE_NAME}
        namespace: ${SERVICEBUS_NAMESPACE_NAME}
      storage:
        blob:
          account-name: ${STORAGE_ACCOUNT_NAME}
          container-name: ${STORAGE_CONTAINER_NAME}
        fileshare:
          enabled: false
          client:
            headers:
          proxy:
            authentication-type:
          credential:
            client-certificate-path:
          profile:
            cloud:
management:
  endpoint:
    health:
      show-details: always
  health:
    azure-cosmos:
      enabled: true
